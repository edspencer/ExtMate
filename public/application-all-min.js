ExtMVC.App.define({name:"MyApp",launch:function(){Ext.QuickTips.init();this.initializeKeyMap();this.menu=ExtMVC.buildView("layout","menu",{region:"west",width:215,split:true,listeners:{scope:this,click:function(B){if(!B.hasChildNodes()){var A=B.attributes;ExtMVC.dispatch("documents","edit",[A.id])}}}});this.main=new Ext.TabPanel({region:"center",plain:true,cls:"mainPanel",enableTabScroll:true});this.scroller=ExtMVC.buildView("documents","scroller",{region:"east",layout:"fit"});this.viewport=new Ext.Viewport({layout:"fit",items:[{layout:"border",items:[this.menu,this.main,this.scroller],tbar:ExtMVC.buildView("layout","toolbar")}]});this.fireEvent("launched");ExtMVC.dispatch("index","index");Ext.get("loading").remove();Ext.get("loading-mask").fadeOut({remove:true})},ctrlKeys:{c:"copy",v:"paste",n:"build",a:"selectAll"},initializeKeyMap:function(A){this.keymap=new Ext.KeyMap(document,[]);Ext.iterate(this.ctrlKeys,function(B,C){this.keymap.addBinding({key:B,ctrl:true,fn:ExtMVC.dispatch.createDelegate(ExtMVC,["documents",C]),stopEvent:true})},this)}});ExtMVC.router.Router.defineRoutes=function(A){A.connect(":controller/:action");A.connect(":controller/:action/:id");A.root({controller:"index",action:"index"})};ExtMVC.registerModel("Document",{fields:[{name:"id",type:"int"},{name:"name",type:"string"},{name:"body",type:"string"}],nextWhiteSpace:function(A,D){var B=this.getLine(A),E=B.substr(D-1);var C=E.indexOf(" ");if(C==-1){C=E.length}return{line:A,column:D+C+1}},previousWord:function(A,D){var B=this.getLine(A),F=B.substr(0,D),E=F.split(" ");var C=Ext.sum(Ext.pluck(E,"length"));if(C==-1){C=0}return{line:A,column:C}},insert:function(C){C=C||{};Ext.applyIf(C,{line:1,column:1});var B=this.getLine(C.line),E=B.substr(0,C.column-1),D=B.substr(C.column-1),A=String.format("{0}{1}{2}",E,C.text,D);this.setLine(C.line,A)},remove:function(A,F,D){D=D||1;var C=this.getLine(A);if(C.length==0){this.removeLine(A)}else{var G=C.substr(0,F-(1+D)),E=C.substr(F-1),B=G+E;this.setLine(A,B)}},setLine:function(C,D){var A=this.get("body"),B=A.split("\n");B[C-1]=D;this.set("body",B.join("\n"))},getLine:function(C){var A=this.get("body"),B=A.split("\n");return B[C-1]},getLines:function(D,C){var E=D,B=Math.min(D+C,this.getLineCount()),A=[];while(E<=B){A.push(this.getLine(E));E+=1}return A},removeLine:function(A){var B=this.get("body").split("\n");var C=B.slice(0,A-1);C=C.concat(B.slice(A));this.set("body",C.join("\n"))},getLineCount:function(){return this.get("body").split("\n").length},getTextForSelection:function(A){return this.getTextBetween(A.get("start"),A.get("end"))},getTextBetween:function(E,B){var A=E.column,D=B.column;if(E.line==B.line){var I=this.getLine(E.line);return I.slice(A-1,D-1)}else{var F=E.line,H=E.line,C=B.line,G="";while(F<=C){var I=this.getLine(F);F+=1;if(F==H){G+=I.slice(A-1)}else{if(F==C){G+=I.slice(0,D-1)}else{G+=I}}}return G}}});ExtMVC.registerModel("Cursor",{fields:[{name:"id",type:"int"},{name:"line",type:"int"},{name:"column",type:"int"}],constrainTo:function(A){this.doc=A},moveTo:function(A,B){A=Math.max(A,1);B=Math.max(B||this.get("column"),1);if(this.doc!=undefined){A=Math.min(A,this.doc.getLineCount());B=Math.min(B,this.doc.getLine(A).length+1)}this.set("line",A);this.set("column",B);return{line:this.get("line"),column:this.get("column")}},moveNextRight:function(){if(this.doc==undefined){return}var A=this.doc.nextWhiteSpace(this.get("line"),this.get("column"));if(A.line&&A.column){return this.moveTo(A.line,A.column)}},moveNextLeft:function(){if(this.doc==undefined){return}var A=this.doc.previousWord(this.get("line"),this.get("column"));if(A.line&&A.column){return this.moveTo(A.line,A.column)}},moveNextUp:function(){},moveNextDown:function(){},moveFarLeft:function(){return this.moveTo(this.get("line"),1)},moveFarRight:function(){if(this.doc==undefined){return}var A=this.doc.getLine(this.get("line")).length;return this.moveTo(this.get("line"),A+1)},moveFarUp:function(){return this.moveTo(1,this.get("column"))},moveFarDown:function(){if(this.doc==undefined){return}return this.moveTo(this.doc.getLineCount(),this.get("column"))},moveLeft:function(){if(this.get("column")==1){var B=this.get("line")-1,A=this.doc.getLine(B).length;return this.moveTo(B,A+1)}else{return this.move("column",-1)}},moveRight:function(){var B=this.get("line"),A=this.doc.getLine(B).length;if(this.get("column")==A+1){return this.moveTo(this.get("line")+1,1)}else{return this.move("column",1)}},moveUp:function(){return this.move("line",-1)},moveDown:function(){return this.move("line",1)},move:function(E,F){var B=this.get("line"),D=this.get("column"),C=E=="line"?F:0,A=E=="column"?F:0;return this.moveTo(B+C,D+A)}});ExtMVC.registerModel("Selection",{fields:[{name:"start"},{name:"end"},{name:"document"}],getSelectedText:function(){return this.get("document").getTextForSelection(this)}});ExtMVC.registerController("application",{extend:"controller"});ExtMVC.registerController("index",{index:function(){Ext.each(["IndexController.js"],function(A){ExtMVC.dispatch("documents","edit",["app-controllers-IndexController.js"])},this)}});ExtMVC.registerController("documents",{build:function(){this.render("new")},initListeners:function(){},edit:function(B){var A=B.split("-");return this.render("edit",{title:A[A.length-1],listeners:{scope:this,scroll:this.updateScroller}})},selectAll:function(){this.withCurrentTab(function(A){A.editor.selectAll()})},copy:function(){this.withCurrentTab(function(A){this.setClipText(A.editor.getSelectedText())})},paste:function(A){this.withCurrentTab(function(B){B.editor.paste(this.getClipText())})},withCurrentTab:function(C,B){var A=this.getCurrentDocumentTab();if(A!=undefined){C.call(B||this,A)}},updateScroller:function(F,E,B){var A=ExtMVC.app.scroller,C=A.getHeight(),D=B/E;A.setScrollerHeight(B);A.scrollTo(F*D)},getCurrentDocument:function(){return this.getCurrentDocumentTab().editor.instance},getCurrentDocumentTab:function(){return ExtMVC.app.main.getActiveTab()},clipText:"",setClipText:function(A){this.clipText=A},getClipText:function(){return this.clipText}});ExtMVC.registerView("layout","menu",{xtype:"treepanel",collapsible:true,constructor:function(A){A=A||{};Ext.applyIf(A,{cls:"file-menu",root:{text:"extmate",id:"menu",nodeType:"async",expanded:true,children:[{text:"app",expanded:true,children:[{text:"App.js",leaf:true,id:"app-App.js"},{text:"controllers",children:[{text:"ApplicationController.js",leaf:true,id:"app-controllers-ApplicationController.js"},{text:"IndexController.js",leaf:true,id:"app-controllers-IndexController.js"}]},{text:"models",children:[{text:"Document.js",leaf:true,id:"app-models-Document.js"}]},{text:"views",children:[{text:"index",children:[{text:"Index.js",leaf:true}]},{text:"layout",children:[{text:"Menu.js",leaf:true},{text:"Toolbar.js",leaf:true}]}]}]},{text:"config",children:[]},{text:"lib",children:[]},{text:"public",children:[]},{text:"script",children:[]},{text:"spec",children:[]},{text:"vendor",children:[]}]},bbar:this.buildBottomToolbar(),autoScroll:true});Ext.tree.TreePanel.prototype.constructor.call(this,A)},buildBottomToolbar:function(){this.newFileButton=new Ext.Button({text:"",iconCls:"new-file",scope:this,handler:ExtMVC.dispatch.createDelegate(ExtMVC,["documents","build"]),tooltip:"Create a new file"});this.newDirectoryButton=new Ext.Button({text:"",iconCls:"new-directory",scope:this,handler:this.onNewDirectory,tooltip:"Create a new directory"});return new Ext.Toolbar({items:[this.newFileButton,"-",this.newDirectoryButton]})}});ExtMVC.registerView("layout","toolbar",{xtype:"toolbar",constructor:function(A){A=A||{};Ext.applyIf(A,{items:[this.buildFileMenu(),this.buildEditMenu()]});Ext.Toolbar.prototype.constructor.call(this,A)},buildFileMenu:function(){return{text:"File",menu:{items:[{text:"New File",iconCls:"new-file",scope:this,handler:ExtMVC.dispatch.createDelegate(ExtMVC,["documents","build"])},{text:"Open Recent",menu:{items:[{iconCls:"file",text:"ApplicationController.js"},{iconCls:"file",text:"Document.js"}]}},{text:"Save",scope:this,iconCls:"save-file",handler:function(){console.log("save")}}]}}},buildEditMenu:function(){return{text:"Edit",menu:{items:[{text:"Find",scope:this,iconCls:"find",handler:function(){console.log("find")}}]}}}});ExtMVC.registerView("index","index",{xtype:"panel",initComponent:function(){Ext.applyIf(this,{title:"Welcome to Ext MVC",html:"This is the default template, which is found in app/views/index/Index.js.  This is being displayed because your config/routes.js file has a map.root setting telling it to use the Index view of the IndexController"});Ext.Panel.prototype.initComponent.apply(this,arguments)}});ExtMVC.registerView("documents","edit",{xtype:"panel",registerXType:"document",title:"New Document",closable:true,autoScroll:true,constructor:function(A){A=A||{};this.editor=ExtMVC.buildView("documents","editor",{listeners:{scope:this,"cursor-moved":this.updateCursorLocation}});Ext.applyIf(A,{bbar:this.buildBottomToolbar(),layout:"fit",items:[this.editor]});Ext.Panel.prototype.constructor.call(this,A);this.on("render",this.loadFakeRecord,this);this.relayEvents(this.editor,["copy","paste","scroll"])},loadRecord:function(A){this.instance=A;this.editor.bind(A)},updateCursorLocation:function(A){this.lineNumber.setText("Line: "+A.get("line"));this.columnNumber.setText("Column: "+A.get("column"))},loadFakeRecord:function(){var A=ExtMVC.buildModel("Document",{body:"ExtJS Text Editor\nAbout:\n\n* <canvas> based\n* Uses ExtJS MVC\n* Aims to emulate E (http://e-texteditor.com)\n* < 1KLOC\n\n* Select + multiple select\n* Multiple cursor support (ctrl + click)\n* Copy/Paste + paste to multiple"});this.loadRecord(A)},buildBottomToolbar:function(){this.lineNumber=new Ext.Toolbar.TextItem({text:"Line: 1"});this.columnNumber=new Ext.Toolbar.TextItem({text:"Column 1"});this.languageCombo=new Ext.form.ComboBox({name:"language",mode:"local",editable:false,forceSelection:true,triggerAction:"all",displayField:"name",valueField:"id",value:"JavaScript",store:new Ext.data.JsonStore({fields:["name","id"],data:[{name:"JavaScript",id:"js"},{name:"HTML",id:"html"},{name:"CSS",id:"css"}]})});return new Ext.Toolbar({items:[this.lineNumber," ",this.columnNumber,"-",this.languageCombo]})}});ExtMVC.registerView("documents","editor",{xtype:"panel",autoEl:{tag:"canvas"},constructor:function(A){A=A||{};Ext.applyIf(A,{gutterWidth:0,gutterMargin:5,gutterPadding:10,lineHeight:14,fontSize:12,gutterColor:"#DEDEDE",gutterTextColor:"#000000",font:"monaco",firstLineNumber:1,cursorWidth:1,cursorColor:"#000000",cursors:[],selections:[],isSelecting:false,selectionColor:"#E1EEFF"});Ext.Panel.prototype.constructor.call(this,A);this.addDefaultCursor();this.addEvents("cursor-moved","paste","scroll");this.on("render",this.initCanvas,this)},addDefaultCursor:function(){var A=ExtMVC.buildModel("Cursor",{line:1,column:1});this.addCursor(A)},initCanvas:function(){var A=this.el,B=A.dom;B.height=this.ownerCt.getHeight()-48;B.width=this.ownerCt.getWidth();this.context=this.el.dom.getContext("2d");this.setFont(this.font,false);A.on({scope:this,click:this.onClick,mousedown:this.startSelection});Ext.get(document).on("keypress",this.onKeyPress,this);A.on("DOMMouseScroll",function(C){this.fireEvent("wheelscroll",C.getWheelDelta())},this);this.addEvents("wheelscroll");this.on("wheelscroll",function(C){var D=this.firstLineNumber-Math.round(C*3);this.scrollTo(D)},this)},bind:function(A){this.instance=A;this.eachCursor(function(B){B.constrainTo(A)});if(this.rendered){this.draw()}else{this.on("render",this.draw,this,{single:true})}},draw:function(){this.clear();var A=this.instance,D=A.getLines(this.firstLineNumber,this.getVisibleLineCount()),C=D.length,B=[],F=15+C.toString().length*10;this.setGutterWidth(F,false);for(var E=0;E<D.length;E++){B.push({number:this.firstLineNumber+E,text:D[E]})}this.drawGutter();this.drawSelections();this.drawLines(B);this.drawCursors()},startSelection:function(A){this.isSelecting=true;this.selectionStart=this.cursorPositionForEvent(A)},endSelection:function(C){this.isSelecting=false;var B=this.cursorPositionForEvent(C),D=this.selectionStart;if(B.column==D.column&&B.line==D.line){return false}var A=ExtMVC.buildModel("Selection",{start:D,end:B});if(!C.ctrlKey){this.clearSelections(false)}this.addSelection(A,false);return true},addSelection:function(A,B){this.selections.push(A);if(B!==false){this.draw()}},clearSelections:function(A){this.selections=[];if(A!==false){this.draw()}},getGutterWidth:function(){return this.gutterWidth},setGutterWidth:function(B,A){this.gutterWidth=B;if(A!==false){this.draw()}},drawGutter:function(){var A=this.getContext();A.fillStyle=this.gutterColor;A.fillRect(0,0,this.gutterWidth,this.el.getHeight())},drawLines:function(B){var E=this.getContext();E.save();var C=this.getVisibleLineCount();for(var D=0;D<B.length;D++){var A=B[D];E.translate(0,this.lineHeight);E.fillStyle=this.gutterTextColor;E.fillText(A.number,this.gutterPadding,0);E.fillText(A.text,this.getLineStartX(),0)}E.restore()},drawCursors:function(){var A=this.getContext();Ext.each(this.cursors,function(B){A.save();A.fillStyle=this.cursorColor;A.translate(this.xForColumnNumber(B.get("column")),this.yForLineNumber(B.get("line"))+3);A.fillRect(0,0,-this.cursorWidth,-this.lineHeight);A.restore()},this)},drawSelections:function(){var A=this.getContext();Ext.each(this.selections,function(I){A.save();A.fillStyle=this.selectionColor;var B=I.get("start"),F=I.get("end"),K=B.line,E=F.line,J=B.line;A.translate(this.getLineStartX(),(K-this.firstLineNumber-1)*this.lineHeight);if(J==E){var C=Math.round(this.getColumnWidth()*(F.column-B.column));A.translate((B.column-1)*this.getColumnWidth(),this.lineHeight);A.fillRect(0,0,C,this.lineHeight)}else{while(J<=E){var L=this.instance.getLine(J),G=0;A.translate(0,this.lineHeight);switch(J){case K:var C=Math.round(this.getColumnWidth()*(this.getColumnCount()-B.column+1)),G=(B.column-1)*this.getColumnWidth();break;case E:var H=Math.round(this.getColumnWidth()*F.column),D=Math.round(this.getColumnWidth()*this.instance.getLine(J).length),C=Math.min(H,D);break;default:var C=this.getColumnWidth()*this.getColumnCount()}A.save();A.fillRect(G,0,C,this.lineHeight);A.restore();J+=1}}A.restore()},this)},getColumnCount:function(){var A=this.el.getWidth()-this.getLineStartX();return Math.floor(A/this.getColumnWidth())},getLineCount:function(){return Math.floor(this.el.getHeight()/this.lineHeight)},clear:function(){this.getContext().clearRect(0,0,this.el.getWidth(),this.el.getHeight())},onKeyPress:function(C){C.stopEvent();var A=false;switch(C.getKey()){case C.ENTER:this.insertAtEachCursor("\n",false);this.eachCursor("moveDown");this.eachCursor("moveFarLeft");if(this.cursors.length==1){var D=this.cursors[0];this.scrollIntoView({line:D.get("line"),column:D.get("column")})}A=true;break;case C.ESC:A=true;break;case C.BACKSPACE:this.eachCursor(function(I){var E=I.get("line"),G=I.get("column"),H=C.ctrlKey?{column:1}:C.altKey?this.instance.previousWord(E,G):{column:G-1},F=G-H.column;this.instance.remove(E,G,F);I.moveLeft()});A=true;break}if(!A){if(C.isNavKeyPress()){this.eachCursor(function(G){var I={37:"Left",38:"Up",39:"Right",40:"Down"};var E="";if(C.ctrlKey){E="Far"}if(C.altKey){E="Next"}var H=String.format("move{0}{1}",E,I[C.getKey()]),F=G[H]();this.scrollIntoView(F)});this.fireEvent("cursor-moved",this.cursors[0])}else{if(C.isSpecialKey()){console.log("special");console.log(C);console.log(C.getKey())}else{var B=String.fromCharCode(C.getKey());this.insertAtEachCursor(B)}}}this.draw()},getSelectedText:function(){var A="";Ext.each(this.selections,function(B){A+=this.instance.getTextForSelection(B)},this);return A},selectAll:function(){var A=this.instance.getLineCount(),B=ExtMVC.buildModel("Selection",{start:{line:1,column:1},end:{line:A,column:this.instance.getLine(A).length}});this.clearSelections(false);this.addSelection(B);return B},paste:function(A){this.eachCursor(function(E){var B=E.get("line"),C=E.get("column");var D={line:B,column:C,text:A};this.instance.insert(D);E.moveTo(B,C+A.length)});if(this.fireEvent("paste",A)!==false){this.draw()}},eachCursor:function(B,A){A=A||this;if(Ext.isString(B)){Ext.each(this.cursors,function(C){C[B]()},A)}else{Ext.each(this.cursors,B,A)}},insertAtEachCursor:function(B,A){this.eachCursor(function(C){this.instance.insert({line:C.get("line"),column:C.get("column"),text:B});if(A!==false){C.moveRight()}})},onClick:function(C){var A=this.endSelection(C);var B=this.cursorPositionForEvent(C);if(C.ctrlKey){var D=ExtMVC.buildModel("Cursor",{line:B.line,column:B.column});this.addCursor(D);D.moveTo(D.get("line"),D.get("column"))}else{this.removeCursors();if(!A){this.clearSelections(false)}var D=this.cursors[0];D.moveTo(B.line,B.column);this.fireEvent("cursor-moved",D)}this.draw()},addCursor:function(A,B){this.cursors.push(A);if(B!==false){A.constrainTo(this.instance)}},removeCursors:function(){this.cursors=[this.cursors[0]]},cursorPositionForEvent:function(E){var B=this.el.getXY(),F=B[0],D=B[1],C=E.getXY(),A=C[0]-F,G=C[1]-D;return this.cursorPositionForCoords(A,G)},cursorPositionForCoords:function(A,E){var D=this.getLineStartX();if(A<D){}else{var C=A-D,B=E;return{line:this.lineForY(B),column:this.columnForX(C)}}},yForLineNumber:function(A){return Math.floor((A-(this.firstLineNumber-1))*this.lineHeight)},xForColumnNumber:function(A){return Math.floor(this.getLineStartX()+(this.getColumnWidth()*(A-1)))},lineForY:function(A){return Math.round(A/this.lineHeight+(this.firstLineNumber-1))},columnForX:function(A){return Math.round(A/this.getColumnWidth()+1)},getColumnWidth:function(){return this.fontSize*0.6},setFontSize:function(A){this.fontSize=A;this.lineHeight=A+2;this.draw()},setFont:function(A,B){this.font=A;this.getContext().font=String.format("{0}px monaco",this.fontSize);if(B!==false){this.draw()}},getContext:function(){return this.context},getLineStartX:function(){return this.gutterWidth+this.gutterMargin},getVisibleLineCount:function(){return Math.ceil(this.getEl().dom.height/this.lineHeight)},getTotalHeight:function(){return this.instance.getLineCount()*this.lineHeight},getBottomVisibleLineNumber:function(){return Math.min(this.instance.getLineCount(),(this.firstLineNumber-1)+this.getVisibleLineCount())},scrollTo:function(A,D){var C=this.instance.getLineCount()-this.getVisibleLineCount(),B=Math.max(C,1);if(A<=0){A=1}A=Math.min(A,B);if(A!=this.firstLineNumber){this.firstLineNumber=A;if(D!==false){this.draw()}this.fireEvent("scroll",A,this.instance.getLineCount(),this.getTotalHeight())}},scrollIntoView:function(C){var A=C.line<this.firstLineNumber,B=C.line>this.getBottomVisibleLineNumber();if(A){this.scrollTo(C.line)}else{if(B){this.scrollTo(C.line-this.getVisibleLineCount())}}}});ExtMVC.registerView("documents","new",{xtype:"formwindow",title:"New File",width:300,height:110,layout:"fit",id:"new_file",closeAction:"close",defaultButton:"new-file-input",buildForm:function(){return new Ext.form.FormPanel({labelWidth:80,bodyStyle:"padding: 5px",items:[{fieldLabel:"Filename",xtype:"textfield",name:"filename",anchor:"-20",id:"new-file-input"}]})}});ExtMVC.registerView("documents","scroller",{xtype:"panel",width:16,frame:false,border:false,plain:true,autoScroll:true,html:{cls:"scroller-proxy",style:"overflow: auto; height: 20px;"},scrollerHeight:10,setScrollerHeight:function(A){this.body.child("div.scroller-proxy").setHeight(A)},scrollTo:function(A){console.log("scroll: "+A);this.body.child("div.scroller-proxy").scrollTo("top",A)}});